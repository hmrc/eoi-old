


Option Compare Database   'Use database order for string comparisons

' Modification History
' Name   : Mustaq Hussain
' Date   : 23 May 1996
' Reason : LER86 Pollution of global name space : Database and RecordSets


Option Explicit
Public GetPeriodOK As Boolean
Public IACalcdone As Boolean


Function GetInterest(incentive, OPDDate, IADate) As Currency

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''
' Modification History
' Name   : Mustaq Hussain
' Date   : 23 May 1996
' Reason : LER86 Pollution of global name space : Database and RecordSets
' Name   : Lisa Scothern
' Date   : 16 September 1997
' Reason : RFC541G - Fixed truncating - now calls global fn curTruncate()
' Name   : Jane Mullen
' Date   : 17 September 1997
' Reason : RFC782 - Cater for leap year division

On Error GoTo err_GetInterest
DoCmd.Hourglass True

GetInterest = 0

If GetPeriodOK Then
    Dim IADB As Database
    Dim RevalTable As DAO.Recordset
    
    Set IADB = CurrentDb()
    Set RevalTable = IADB.OpenRecordset("COEG Revaluation Rate Table", DB_OPEN_TABLE, DB_READONLY)
    
    
    
    
    Dim OPDYear As Integer
    Dim OPDMonth As Integer
    Dim OPDDay As Integer
    
    Dim IAYear As Integer
    Dim IAMonth As Integer
    Dim IAday As Integer
    
    Dim Numberyears As Integer
    Dim NumberDays As Integer
    
    Dim AnniDate As Variant
    Dim result As Variant
    
    Dim RevalRate As Currency
    
    Dim YearInterest As Currency
    Dim YearResult As Currency
    Dim RoundStore1 As Currency
    Dim RoundStore2 As Currency
    
    Dim FinalYearDays As Integer
    Dim FinalDays As Integer
    Dim OPDYearStart As Variant
    Dim OPDYear1Start As Variant
    Dim OPDYearEnd As Variant
    Dim Feb29Date As Variant
    
    Dim Today As Variant
  
    
    'Obtain elements of dates
    OPDYear = DatePart("yyyy", OPDDate)
    IAYear = DatePart("yyyy", IADate)
    OPDMonth = DatePart("m", OPDDate)
    IAMonth = DatePart("m", IADate)
    OPDDay = DatePart("d", OPDDate)
    IAday = DatePart("d", IADate)
    
    'Calculate number of complete tax years between IA payment date
    'and OPD date
    
    Numberyears = OPDYear - IAYear
    
        Select Case OPDMonth
        
            Case Is > IAMonth
                Numberyears = Numberyears
        
            Case Is = IAMonth
                
                Select Case OPDDay
        
                    Case Is > IAday
                        
                    Case Is = IAday
        
                    Case Is < IAday
                        Numberyears = Numberyears - 1
                        If (IAday = 29 And IAMonth = 2) Then
                            If (OPDDay = 28 And OPDMonth = 2) Then
                            Numberyears = Numberyears + 1
                            End If
                        End If
                End Select
        
            Case Is < IAMonth
                Numberyears = Numberyears - 1
        
        End Select
    
    'Calculate number of remaining days from anniversary of IA payment date
    'to OPD date
    
    AnniDate = DateAdd("yyyy", Numberyears, IADate)
    NumberDays = DateDiff("y", AnniDate, OPDDate)
    
    
    'cope with stir calc09/r2/4
        If NumberDays < 0 Then
            NumberDays = 0
        End If
    
    'Obtain compound revaluation rate for the number of complete
    'tax years
    
    RevalTable.Index = "PrimaryKey"
    RevalTable.Seek "=", Numberyears
    
    ' If the year is not found.
        If RevalTable.NoMatch Then
        
            GetInterest = 0
            DoCmd.Hourglass False
            Exit Function
        
        Else
            RevalRate = RevalTable!RevalRate85
            YearInterest = RevalRate * CCur(incentive)
            'Truncate to 2 decimal places
            YearInterest = curTruncate(YearInterest)
            
    
            YearResult = YearInterest + CCur(incentive)
            
            RoundStore1 = (YearResult * 0.085)
            
            'Truncate to 2 decimal places
            RoundStore1 = curTruncate(RoundStore1)
          
        
            'Determine number of days (ie the part year, if opbdate )
            OPDYearStart = DateSerial(OPDYear, 1, 1)
            OPDYearEnd = DateSerial(OPDYear + 1, 1, 1)
            FinalYearDays = DateDiff("y", OPDYearStart, OPDYearEnd)
           
    
            OPDYear1Start = DateSerial(OPDYear - 1, 1, 1)
            FinalDays = DateDiff("y", OPDYear1Start, OPDYearStart)
            
    
            'If the Anniversary of the IA payment encompasses the 29/2 and is less than the OPBDate
            'calculates what it needs to be divided by either 366 or 365.
    
            If FinalYearDays = 366 Then
                Feb29Date = DateSerial(OPDYear, 2, 29)
                If (Feb29Date >= AnniDate) And (Feb29Date <= OPDDate) Then
                    result = FinalYearDays
                Else
                    result = FinalYearDays - 1
                End If
            ElseIf FinalDays = 366 Then
                Feb29Date = DateSerial(OPDYear - 1, 2, 29)
                If (Feb29Date >= AnniDate) And (Feb29Date <= OPDDate) Then
                    result = FinalDays
                Else
                    result = FinalDays - 1
                End If
            Else
                result = 365
            End If
    
            RoundStore2 = RoundStore1 * NumberDays / result
            'Truncate to 2 decimal places
            RoundStore2 = curTruncate(RoundStore2)
            GetInterest = RoundStore2 + YearInterest
            'Forms!frmIAmain!InterestForm.SetFocus
            
        End If

End If


exit_GetInterest:
    DoCmd.Hourglass False
    Exit Function
err_GetInterest:
    MsgBox Error$
    
    Resume exit_GetInterest
End Function

Function GetPeriod(IADate, OPDDate, incentive) As Variant

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''
' Name   : Chris Schuler
' Date   : 12 December 2005
' Reason : Duplicated validation removed.


On Error GoTo err_GetPeriod

Dim OPDYear As Integer
Dim OPDMonth As Integer
Dim OPDDay As Integer
Dim IAYear As Integer
Dim IAMonth As Integer
Dim IAday As Integer
Dim Numberyears As Integer
Dim NumberDays As Integer
Dim AnniDate As Variant

DoCmd.Hourglass True
GetPeriod = ""
GetPeriodOK = False

    'Exit function if all parameters not yet present
    If IsNull(OPDDate) Or IsNull(IADate) Or IsNull(incentive) Then
        
        GoTo Exit_GetPeriod
    End If
If Not IACalcdone Then
    
    

OPDYear = DatePart("yyyy", OPDDate)
IAYear = DatePart("yyyy", IADate)
OPDMonth = DatePart("m", OPDDate)
IAMonth = DatePart("m", IADate)
OPDDay = DatePart("d", OPDDate)
IAday = DatePart("d", IADate)

'Calculate number of complete tax years between IA payment date
'and OPD date

Numberyears = OPDYear - IAYear

Select Case OPDMonth

    Case Is > IAMonth
        Numberyears = Numberyears

    Case Is = IAMonth
        
        Select Case OPDDay

            Case Is > IAday
                
            Case Is = IAday

            Case Is < IAday
                Numberyears = Numberyears - 1
                If IAday = 29 And IAMonth = 2 Then
                    If (OPDDay = 28 And OPDMonth = 2) Then
                    Numberyears = Numberyears + 1
                    End If
                End If
               
        End Select

    Case Is < IAMonth
        Numberyears = Numberyears - 1

End Select

'Calculate number of remaining days from anniversary of IA payment date
'to OPD date

AnniDate = DateAdd("yyyy", Numberyears, IADate)

NumberDays = DateDiff("y", AnniDate, OPDDate)

'cope with stir calc09/r2/4
If NumberDays < 0 Then
    NumberDays = 0
End If

'Return period

GetPeriod = Numberyears & " " & "Years" & " " & NumberDays & " " & "Days"

GetPeriodOK = True
End If
Exit_GetPeriod:
    DoCmd.Hourglass False
    Exit Function
err_GetPeriod:
    MsgBox Error$
    
    Resume Exit_GetPeriod
End Function

Private Sub cmdCalculate_Click()

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''
' Name   : Chris Schuler
' Date   : 12 December 2005
' Reason : Use recordset instead of functions in a query to prevent looping in Access 2003

On Error GoTo Err_cmdCalculate_Click


IACalcdone = False

DoCmd.Hourglass True

Dim Today As Variant
Today = Date
'Validate Date
If Forms!frmIAmain![txtOPB_Date] <= Forms!frmIAmain!InterestForm.Form![IA Payment Date] Then

    MsgBox "OPB date must be after the IA Payment Date", 0 + 48, "Information"
    

ElseIf Forms!frmIAmain!InterestForm.Form![IA Payment Date] < #4/6/1988# Then
    MsgBox "IA Payment date must be during the period 06/04/88" & " " & "to" & " " & Date & " - Please reinput", 0 + 48, "Information"

ElseIf Forms!frmIAmain!InterestForm.Form![IA Payment Date] > Today Then
   MsgBox "IA Payment date must be during the period 06/04/88" & " " & "to" & " " & Date & " - Please reinput", 0 + 48, "Information"

'Validate incentive
ElseIf Forms!frmIAmain!InterestForm.Form![Incentive Addition] > 9999 Then
    MsgBox "The amount of Incentive entered must be less than £10,000 - Please reinput", 0 + 48, "Information"
   

Else

    
    IACalc
    
    Forms!frmIAmain!IATotal = Forms![frmIAmain]!InterestForm.Form![txtSum Incentive Addition]
    Forms!frmIAmain!InterestTotal = Forms![frmIAmain]!InterestForm.Form![txtSum Interest]
    Forms!frmIAmain!TotalDue = Forms!frmIAmain![IATotal] + Forms!frmIAmain![InterestTotal]
    
    IACalcdone = True
    
End If



Exit_cmdCalculate_Click:
    DoCmd.Hourglass False
    Exit Sub
Err_cmdCalculate_Click:
    MsgBox Error$
    Resume Exit_cmdCalculate_Click
End Sub

Private Sub cmdClear_Click()

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''

' Modification History
' Name   : Mustaq Hussain
' Date   : 23 May 1996
' Reason : LER86 Pollution of global name space : Database and RecordSets
' Modification History
' Name   : Jane Mullen
' Date   : 30 January 1997
' Reason : RFC 515 - Clear new additional fields

On Error GoTo Err_cmdClear_Click
DoCmd.Hourglass True


Dim IADB As Database
Dim CalculatedRecords As DAO.Recordset

Set IADB = CurrentDb()
Set CalculatedRecords = IADB.OpenRecordset("IA Holding Table", DB_OPEN_TABLE)
    
    'initialise OPB date on mainform
    Forms!frmIAmain![txtOPB_Date] = Null
    Forms!frmIAmain![txtSurname] = Null
    Forms!frmIAmain![txtInitial] = Null
    Forms!frmIAmain![txtRef] = Null
    Forms!frmIAmain![txtNINOprefix] = Null
    Forms!frmIAmain![txtNINOnumeric] = Null
    Forms!frmIAmain![txtNINOsuffix] = Null
    Forms!frmIAmain![txtOPB_Date] = Date

If Not (CalculatedRecords.BOF And CalculatedRecords.EOF) Then
    'Delete all records on subform datasheet
    Do Until CalculatedRecords.EOF
        CalculatedRecords.Delete
        CalculatedRecords.MoveNext
    Loop
End If
    Forms!frmIAmain!txtSurname.SetFocus
    'recalculate calculated controls
    'Recalc
    Forms!frmIAmain!IATotal = Null
    Forms!frmIAmain!InterestTotal = Null
    Forms!frmIAmain!TotalDue = Null

    Me.Refresh
    IACalcdone = False
    
Exit_cmdClear_Click:
    CalculatedRecords.Close
    DoCmd.Hourglass False
    Exit Sub
Err_cmdClear_Click:
    MsgBox Error$
    Resume Exit_cmdClear_Click
End Sub

Private Sub cmdClose_Click()

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''

On Error GoTo Err_cmdClose_Click
    DoCmd.Hourglass True
    DoCmd.Close
Exit_cmdClose_Click:
    DoCmd.Hourglass False
    Exit Sub
Err_cmdClose_Click:
    MsgBox Error$
    Resume Exit_cmdClose_Click
    
End Sub

Private Sub cmdPrint_Click()

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''

' Modification History
' Name   : Mustaq Hussain
' Date   : 23 May 1996
' Reason : LER86 Pollution of global name space : Database and RecordSets


On Error GoTo Err_cmdPrint_Click
DoCmd.Hourglass True


    
Dim IADB As Database
Dim CalculatedRecords As DAO.Recordset

Set IADB = CurrentDb()

Set CalculatedRecords = IADB.OpenRecordset("IA Holding Table", DB_OPEN_TABLE)
If CalculatedRecords.BOF And CalculatedRecords.EOF Then
    MsgBox "You have not entered a record", 0 + 48, "Warning"
    Forms!frmIAmain!Interest.SetFocus
    DoCmd.Hourglass False
    Exit Sub
Else
    
    cmdCalculate_Click
    
    If IACalcdone Then
        Dim DocName As String
        
        DocName = "rptIAInterest"
        DoCmd.OpenReport DocName, A_NORMAL
    End If
    
End If
Exit_cmdPrint_Click:
    DoCmd.Hourglass False
    Exit Sub

Err_cmdPrint_Click:
    MsgBox Error$
    Resume Exit_cmdPrint_Click
    
End Sub


Private Sub Form_Load()

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''
' Modification History
' Name   : Mustaq Hussain
' Date   : 23 May 1996
' Reason : LER86 Pollution of global name space : Database and RecordSets


On Error GoTo err_Form_Load
DoCmd.Hourglass True
DoCmd.Maximize

Dim Sname As String
Dim Fname As String

'Obtain surname from function
Sname = getsurname()
'Obtain initials from function
Fname = getinitials()
'Populate appropriate field
Forms![frmIAmain]![txtPrepared By] = Fname & " " & Sname
Forms![frmIAmain]![txtOPB_Date] = Date
IACalcdone = False

exit_Form_Load:
    DoCmd.Hourglass False
    Exit Sub
err_Form_Load:
    MsgBox Error$
    Resume exit_Form_Load
End Sub

Private Sub Form_Unload(Cancel As Integer)

            '''''''''''''''''''''''''''''''''''''''''''
            ' AUTHOR : BRIAN SHARRATT - I.T.S.A. 1995 '
            '''''''''''''''''''''''''''''''''''''''''''
' Modification History
' Name   : Mustaq Hussain
' Date   : 23 May 1996
' Reason : LER86 Pollution of global name space : Database and RecordSets


On Error GoTo Err_Form_Unload
'Clear down any records

Dim IADB As Database
Dim CalculatedRecords As DAO.Recordset

Set IADB = CurrentDb()

Set CalculatedRecords = IADB.OpenRecordset("IA Holding Table", DB_OPEN_TABLE)

If CalculatedRecords.BOF And CalculatedRecords.EOF Then
    Exit Sub
Else
    'Delete all records on subform datasheet
    Do Until CalculatedRecords.EOF
        CalculatedRecords.Delete
        CalculatedRecords.MoveNext
    Loop
    'initialise OPB date on mainform
    Forms!frmIAmain![txtOPB_Date] = Null
    'recalculate calculated controls
    Recalc
End If


Exit_Form_Unload:
    Exit Sub
Err_Form_Unload:
    MsgBox Error$
    Resume Exit_Form_Unload
End Sub
Sub IACalc()
'Validate dates And incentive
Dim IADate As Date
Dim OPBDate As Date
Dim incentive As Currency
OPBDate = Forms!frmIAmain![txtOPB_Date]
    Dim IADB As DAO.Database
    Dim IARecords As DAO.Recordset
    
    Set IADB = CurrentDb()
    Set IARecords = IADB.OpenRecordset("IA Holding Table", dbOpenDynaset)

    With IARecords
        .MoveFirst
        Do Until .EOF
            .Edit
            IADate = ![IA Payment Date]
            incentive = ![Incentive Addition]
            ![Period] = GetPeriod(IADate, OPBDate, incentive)
            ![Interest] = GetInterest(incentive, OPBDate, IADate)
            .Update
            .MoveNext
        
        Loop
        .Close
    End With
    
    
End Sub

Private Sub txtNINOsuffix_AfterUpdate()
If Not IsNull(txtNINOsuffix) And Not IsNull(txtOPB_Date) Then

    Select Case txtNINOsuffix
      
    
        Case "A" To "D", ""
        
        
            'do nowt
            
        Case "F", "M"
                
                If txtOPB_Date > #5/4/2005# Then
                
                    MsgBox "Only A, B, C or D allowed", vbOKOnly, "NI suffix"
                    txtNINOsuffix = Null
                    txtInitial.SetFocus
                    txtNINOsuffix.SetFocus
                    
                End If
                
                
        Case Else
        
            
                MsgBox "Only A, B, C or D allowed", vbOKOnly, "NI suffix"
                txtNINOsuffix = Null
                txtInitial.SetFocus
                txtNINOsuffix.SetFocus
            
    End Select

End If
End Sub