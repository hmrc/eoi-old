
Option Compare Database   'Use database order for string comparisons

Option Explicit
Private Sub PopulateThresholds()
' Author    : Ben Stephenson
' Date      : 22/06/2011
' Project   : CCA10512
' Desc      : Programatically set the threshold limit text boxes

    
    Me.txtLEL.value = DLookup("[WkLEL]", "[tblBandLimits1999]", "[Tax Yr] = '" & _
                               [Forms]![frmUnofficialDeferment09]![cboTaxYear] & "'")
                                    
    If cboTaxYear > 2010 Then
        Me.txtET = DLookup("[WkPT]", "[tblBandLimits1999]", "[Tax Yr] = '" & _
                        [Forms]![frmUnofficialDeferment09]![cboTaxYear] & "'")
    Else
        Me.txtET = DLookup("[WkEE_ET]", "[tblBandLimits1999]", "[Tax Yr] = '" & _
                            [Forms]![frmUnofficialDeferment09]![cboTaxYear] & "'")
    End If
    
    Me.txtUAP.value = DLookup("[WkUAP]", "[tblBandLimits1999]", "[Tax Yr] = '" & _
                               [Forms]![frmUnofficialDeferment09]![cboTaxYear] & "'")
                               
    Me.txtUEL.value = DLookup("[WkUEL]", "[tblBandLimits1999]", "[Tax Yr] = '" & _
                               [Forms]![frmUnofficialDeferment09]![cboTaxYear] & "'")
End Sub

Private Sub cboTaxYear_AfterUpdate()

On Error GoTo err_cboTaxYear_AfterUpdate

DoCmd.Echo False

Select Case cboTaxYear

Case Is < 2009

    DoCmd.OpenForm "frmUnofficialDeferment", , , , , , cboTaxYear
    
    With Forms!frmUnofficialDeferment
        !Surname = Me!Surname
        !Initial = Me!Initial
        !NIPrefix = Me!NIPrefix
        !NInumber = Me!NInumber
        !NIsuffix = Me!NIsuffix
        !txtRef = Me!txtRef
    End With

    DoCmd.Close acForm, "frmUnofficialDeferment09"
    'GoTo Exit_cboTaxyear_AfterUpdate
    
Case Is > 2010
    Me.lblTitleET.Caption = cPost2010Thrsh
    Form_fsubUnofficialDeferment09.lblLELToET.Caption = "1b Earnings at " & cPost2010LEL_ET
    Form_fsubUnofficialDeferment09.lblETToUAP.Caption = "1c Earnings at " & cPost2010ET_UAP
    PopulateThresholds
Case Is > 2008
    Me.lblTitleET.Caption = cPre2011Thrsh
    Form_fsubUnofficialDeferment09.lblLELToET.Caption = "1b Earnings at " & cPre2011LEL_ET
    Form_fsubUnofficialDeferment09.lblETToUAP.Caption = "1c Earnings at " & cPre2011ET_UAP
    PopulateThresholds
End Select



exit_cboTaxYear_AfterUpdate:
DoCmd.Echo True

    Exit Sub

err_cboTaxYear_AfterUpdate:
    MsgBox Error$
    Resume exit_cboTaxYear_AfterUpdate

End Sub

''''''''''''''''''''''''''''''''''''''''''''
' AUTHOR : CHRIS SCHULER  - ACCENTURE 2006 '
''''''''''''''''''''''''''''''''''''''''''''
Private Sub close_Click()

            
On Error GoTo Err_close_Click

Newbutton_Click

DoCmd.Close


Exit_close_Click:
    Exit Sub

Err_close_Click:
    MsgBox Error$
    Resume Exit_close_Click

End Sub

Private Sub cmdPrint_Click()

On Error GoTo Err_cmdPrint_Click

    Dim DocName As String

    If Forms!frmUnofficialDeferment09!cboTaxYear = "" Or IsNull(Forms!frmUnofficialDeferment09!cboTaxYear) Then
        MsgBox "Print not available, please enter required Tax Year.", 0 + 48, "Information"
        Forms!frmUnofficialDeferment09.cboTaxYear.SetFocus
        Exit Sub
    End If
    
    UnofficialDeferment09
    
    DocName = "rptUnofficialDeferment09"
    DoCmd.OpenReport DocName, A_NORMAL

Exit_cmdPrint_Click:
    Exit Sub

Err_cmdPrint_Click:
    MsgBox Error$
    Resume Exit_cmdPrint_Click
    
End Sub

Private Sub Form_Load()

On Error GoTo err_Form_Load

DoCmd.SetWarnings False

Dim Sname As String
Dim Fname As String

DoCmd.Maximize

'cboTaxYear = 2010

    'check if year passed in
    If Me.OpenArgs <> "" Then
        cboTaxYear = OpenArgs
    Else
        cboTaxYear = strCurrentTaxYear("CLASS 1 RATE TABLE")
    End If
    
    
Sname = getsurname()
Fname = getinitials()
Forms![frmUnofficialDeferment09]!PreparedBy.Enabled = True

Forms![frmUnofficialDeferment09]![PreparedBy] = Fname & " " & Sname
Forms![frmUnofficialDeferment09]!PreparedBy.Enabled = False

cboTaxYear_AfterUpdate

exit_Form_Load:
    Exit Sub

err_Form_Load:
    MsgBox Error$
    Resume exit_Form_Load

End Sub

Private Sub Form_Unload(Cancel As Integer)

On Error GoTo Err_Form_Unload

Newbutton_Click

Exit_Form_Unload:
    Exit Sub

Err_Form_Unload:
    MsgBox Error$
    Resume Exit_Form_Unload

End Sub

Private Sub Newbutton_Click()

    On Error GoTo Err_NewButton_Click
    
    DoCmd.SetWarnings False
    
    DoCmd.Hourglass True
    
'Runs the required SQL to delete all of the data input on the subform
    
    DoCmd.RunSQL "DELETE * FROM [tblUnofficialDeferment09]"
    
    Forms![frmUnofficialDeferment09]![SubUnofficialDeferment].Form.Requery


'Re-initialises all of the input fields and set focus back to first input field
    With Forms!frmUnofficialDeferment09
        !Surname = ""
        !Initial = ""
        !NIPrefix = ""
        !NInumber = ""
        !NIsuffix = ""
        
        !txtRef = ""
    
        !cboTaxYear = DLast("[taxyear]", "[Contribution Period Table]")
    
        !Surname.Locked = False
        !Initial.Locked = False
        !NIPrefix.Locked = False
        !NInumber.Locked = False
        !NIsuffix.Locked = False
        !cboTaxYear.Locked = False
        !txtAnnualMax = Null
        !txtLiability = Null
        !txtDifference = Null
        !txtIfNOTUD = Null
        !lblDue.Visible = False
        !Surname.SetFocus
    
    End With
        
Exit_NewButton_Click:
    DoCmd.Hourglass False
    Exit Sub
    
Err_NewButton_Click:
    MsgBox Error$
    Resume Exit_NewButton_Click

End Sub

Private Sub NIPrefix_LostFocus()

On Error GoTo Err_NIPrefix_LostFocus

Forms![frmUnofficialDeferment09]![NIPrefix] = UCase(Forms![frmUnofficialDeferment09]![NIPrefix])

Exit_NIPrefix_LostFocus:
    Exit Sub

Err_NIPrefix_LostFocus:
    MsgBox Error$
    Resume Exit_NIPrefix_LostFocus

End Sub

Private Sub NIsuffix_AfterUpdate()
If Not IsNull(NIsuffix) Then

    Select Case NIsuffix
      
    
        Case "A" To "D", ""
        
        
            'do nowt
    
        Case "F", "M"
        
            If cboTaxYear > 2004 Then
                MsgBox "Only A, B, C or D allowed", vbOKOnly, "NI suffix"
                NIsuffix = Null
                cboTaxYear.SetFocus
                NIsuffix.SetFocus
            End If
                
        Case Else
        
            If cboTaxYear > 2004 Then
                MsgBox "Only A, B, C or D allowed", vbOKOnly, "NI suffix"
                NIsuffix = Null
                cboTaxYear.SetFocus
                NIsuffix.SetFocus
            Else
                MsgBox "Only A, B, C, D, F or M allowed", vbOKOnly, "NI suffix"
                NIsuffix = Null
                cboTaxYear.SetFocus
                NIsuffix.SetFocus
            End If
                  
    End Select

End If
End Sub

Private Sub NIsuffix_LostFocus()

On Error GoTo Err_NIsuffix_LostFocus

Forms![frmUnofficialDeferment09]![NIsuffix] = UCase(Forms![frmUnofficialDeferment09]![NIsuffix])

Exit_NIsuffix_LostFocus:
    Exit Sub

Err_NIsuffix_LostFocus:
    MsgBox Error$
    Resume Exit_NIsuffix_LostFocus

End Sub


Private Sub cmdCalc_Click()
On Error GoTo Err_cmdCalc_Click


DoCmd.Hourglass True

If IsNull(Forms!frmUnofficialDeferment09!cboTaxYear) Or Forms!frmUnofficialDeferment09!cboTaxYear = "" Then
    MsgBox "Please enter the required tax year.", 0 + 48, "Information"
    Forms!frmUnofficialDeferment09!cboTaxYear.SetFocus
    DoCmd.Hourglass False
    Exit Sub
End If

UnofficialDeferment09

Exit_cmdCalc_Click:
    DoCmd.Hourglass False
    Exit Sub

Err_cmdCalc_Click:
    MsgBox Err.Description
    Resume Exit_cmdCalc_Click
    
End Sub

Private Sub SubUnofficialDeferment09_Exit(Cancel As Integer)

End Sub


Sub UnofficialDeferment09()

' Project : CCA10512
' Author  : Ben Stephenon
' Date    : 02/08/2011
' Desc    : Modify to deal with addition of ST and PT earnings levels from 2010

On Error GoTo Err_UnofficialDeferment

Dim UDCat As String  'Category
Dim UDTaxYear As String
Dim EERate As Double 'Employee's rate
Dim EERateA As Double 'Employee's Cat A rate
Dim EE_AboveUELA 'As Double 'Employee's Cat A rate above UEL
Dim EE_NIC_Rebate As Double
Dim EE_AboveUEL As Double
Dim EE_AboveUAP As Double
Dim UDDB As Database
Dim UDset As DAO.Recordset
Dim NCO_Rate As Double 'Non Contracted_out rate ET to UAP
Dim NCO_RateAboveUAP As Double 'Non Contracted_out rate UAP to UEL
Set UDDB = CurrentDb()
    
Set UDset = UDDB.OpenRecordset("Select * from [tblUnofficialDeferment09]")

UDset.MoveFirst



While Not UDset.EOF

    UDset.Edit
    
    UDCat = UDset!Category
    UDTaxYear = Forms!frmUnofficialDeferment09!cboTaxYear
    
    EERate = DLookup("[EE_Rate]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = '" & UDCat & "'")
    EE_NIC_Rebate = DLookup("[EE NIC Rebate]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = '" & UDCat & "'")
    EE_AboveUAP = DLookup("[EE_AboveUAP]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = '" & UDCat & "'")
    EE_AboveUEL = DLookup("[EE_AboveUEL]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = '" & UDCat & "'")
    NCO_Rate = DLookup("[EE_Rate]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = 'A'")
    NCO_RateAboveUAP = DLookup("[EE_AboveUAP]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = 'A'")
    
    'Calculate the [Earnings over UEL] and [NICs due Non - Contracted Out] depending on category
    Select Case UDCat
    
        Case "A"
            UDset![Earnings over UEL] = (curRound(UDset![Employee NICS 1e]) _
                                                  - curRound(UDset![Earnings at ET - UAP 1c] * EERate) _
                                                  - curRound(UDset![Earnings at UAP - UEL 1d] * EE_AboveUAP)) _
                                        / EE_AboveUEL
            
            If UDset![Earnings over UEL] < 0 Then
                
                UDset![Earnings over UEL] = 0
                
            End If
            
            UDset![NICs due Non - Contracted Out] = UDset![Employee NICS 1e]
            
        Case "D", "F"
            UDset![Earnings over UEL] = curRound(UDset![Employee NICS 1e] + _
                                        curRound(UDset![Earnings at LEL - ET 1b] * EE_NIC_Rebate) - _
                                        (curRound(UDset![Earnings at ET - UAP 1c] * EERate) _
                                        + (UDset![Earnings at UAP - UEL 1d] * EE_AboveUAP))) _
                                        / EE_AboveUEL
        
            UDset![NICs due Non - Contracted Out] = curRound((UDset![Earnings at ET - UAP 1c] * NCO_Rate) _
                                                    + curRound((UDset![Earnings at UAP - UEL 1d] * NCO_RateAboveUAP)) _
                                                    + curRound(UDset![Earnings over UEL] * EE_AboveUEL))

        Case "J", "L", "S"
            UDset![Earnings over UEL] = (UDset![Employee NICS 1e] _
                                        + curRound(UDset![Earnings at LEL - ET 1b] * EE_NIC_Rebate) _
                                        - curRound(UDset![Earnings at ET - UAP 1c] * EERate) _
                                        - curRound(UDset![Earnings at UAP - UEL 1d] * EE_AboveUAP)) _
                                        / EE_AboveUEL

            UDset![NICs due Non - Contracted Out] = UDset![Employee NICS 1e] _
                                                    + curRound(UDset![Earnings at LEL - ET 1b] _
                                                    * EE_NIC_Rebate)
    End Select
    
    UDset![Gross Pay] = UDset![Earnings at LEL 1a] _
                        + UDset![Earnings at LEL - ET 1b] _
                        + UDset![Earnings at ET - UAP 1c] _
                        + UDset![Earnings at UAP - UEL 1d] _
                        + UDset![Earnings over UEL]
    

    If UDCat = "J" Or UDCat = "L" Or UDCat = "S" Then
        UDset![If NOT Unofficial Deferment] = curRound((UDset![Earnings at ET - UAP 1c] * NCO_Rate)) _
                                              + curRound((UDset![Earnings at UAP - UEL 1d] * NCO_RateAboveUAP)) _
                                              + curRound((UDset![Earnings over UEL] * EE_AboveUEL)) _
                                              - UDset![Employee NICS 1e]
    Else
        UDset![If NOT Unofficial Deferment] = 0
    End If
    
    UDset.Update
    UDset.MoveNext
Wend
UDset.Close

'Calculate Unofficial Deferment using the 8 steps
With Forms!frmUnofficialDeferment09
    .SubUnofficialDeferment.Form.Requery
    
    'csne
    !txtStep1 = ((![txtUAP] - ![txtET]) + (![txtUEL] - ![txtUAP])) * 53
    '!txtStep2 = ![txtStep1] * 0.11
    EERateA = DLookup("[EE_Rate]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = 'A'")

    !txtStep2 = ![txtStep1] * EERateA
    !txtStep3 = DSum("[Earnings at ET - UAP 1c]", "[tblUnofficialDeferment09]") + DSum("[Earnings at UAP - UEL 1d]", "[tblUnofficialDeferment09]")
    !txtStep4 = ![txtStep3] - ![txtStep1]
    '!txtStep5 = IIf(![txtStep4] < 0 Or IsNull(![txtStep4]), 0, (![txtStep4] * 0.01))
    EE_AboveUELA = DLookup("[EE_AboveUEL]", "tblClass1_1999", "[Tax Yr] = '" & UDTaxYear & "' AND cat = 'A'")
    
    !txtStep5 = IIf(![txtStep4] < 0 Or IsNull(![txtStep4]), 0, (![txtStep4] * EE_AboveUELA))
    ' !txtStep5 = ![txtStep4] * 0.01
    !txtStep6 = curRound(DSum("[Earnings over UEL]", "[tblUnofficialDeferment09]"))
    '!txtStep7 = ![txtStep6] * 0.01
    !txtStep7 = ![txtStep6] * EE_AboveUELA
    !txtStep8 = ![txtStep2] + ![txtStep5] + ![txtStep7]
    !txtAnnualMax = ![txtStep8]
    !txtLiability = DSum("[NICs due Non - Contracted Out]", "[tblUnofficialDeferment09]")
    !txtDifference = IIf(DSum("[Employee NICS 1e]", "[tblUnofficialDeferment09]") = 0, 0, ![txtAnnualMax] - ![txtLiability])
    !txtIfNOTUD = curRound(DSum("[If NOT Unofficial Deferment]", "[tblUnofficialDeferment09]"))
    
    If !txtDifference = 0 Or !txtIfNOTUD < !txtDifference Then
        
        !lblDue.Visible = False
        !lblDue2.Visible = True
    Else
    
        !lblDue.Visible = True
        !lblDue2.Visible = False
    End If
    
End With

Exit_UnofficialDeferment:
    DoCmd.Hourglass False
    Exit Sub

Err_UnofficialDeferment:
    MsgBox Err.Description & " in Unofficial Deferment procedure"
    Resume Exit_UnofficialDeferment
End Sub